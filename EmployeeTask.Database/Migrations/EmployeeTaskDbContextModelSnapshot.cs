// <auto-generated />
using System;
using EmployeeTask.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeeTask.Database.Migrations
{
    [DbContext(typeof(EmployeeTaskDbContext))]
    partial class EmployeeTaskDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmployeeTask.Models.Entities.EmpyoyeeModels.Employee", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MeetingId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("MeetingId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("EmployeeTask.Models.Entities.MeetingModels.Meeting", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Meeting");
                });

            modelBuilder.Entity("EmployeeTask.Models.Entities.TaskModels.TaskEnt", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("EmployeeTaskEnt", b =>
                {
                    b.Property<string>("AssigneesId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AssingnedTasksId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("AssigneesId", "AssingnedTasksId");

                    b.HasIndex("AssingnedTasksId");

                    b.ToTable("EmployeeTaskEnt");
                });

            modelBuilder.Entity("EmployeeTask.Models.Entities.EmpyoyeeModels.Employee", b =>
                {
                    b.HasOne("EmployeeTask.Models.Entities.MeetingModels.Meeting", null)
                        .WithMany("Attendees")
                        .HasForeignKey("MeetingId");
                });

            modelBuilder.Entity("EmployeeTaskEnt", b =>
                {
                    b.HasOne("EmployeeTask.Models.Entities.EmpyoyeeModels.Employee", null)
                        .WithMany()
                        .HasForeignKey("AssigneesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmployeeTask.Models.Entities.TaskModels.TaskEnt", null)
                        .WithMany()
                        .HasForeignKey("AssingnedTasksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EmployeeTask.Models.Entities.MeetingModels.Meeting", b =>
                {
                    b.Navigation("Attendees");
                });
#pragma warning restore 612, 618
        }
    }
}
